function __awaiter(e,t,n,o){return new(n||(n=Promise))(function(i,r){function l(e){try{c(o.next(e))}catch(e){r(e)}}function s(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){e.done?i(e.value):new n(function(t){t(e.value)}).then(l,s)}c((o=o.apply(e,t||[])).next())})}function scrollTo(e,t){return __awaiter(this,void 0,void 0,function*(){if(!(e instanceof Element||e instanceof Window))throw new Error(`element passed to scrollTo() must be either the window or a DOM element, you passed ${e}!`);t=sanitizeScrollOptions(t);const n=(t,o,i,r,l=300,s,c)=>{window.requestAnimationFrame(()=>{const a=Date.now(),u=Math.min(1,(a-r)/l);if(t===o)return c?c():null;setScrollPosition(e,s(u)*(o-t)+t),u<1?n(getScrollPosition(e),o,i,r,l,s,c):c&&c()})},o=getScrollPosition(e),i=getScrollPropertyByElement(e);return new Promise(e=>{n(o,t.top,i,Date.now(),t.duration,getEasing(t.easing),e)})})}function scrollIntoView(e,t,n){validateElement(e),!t||t instanceof Element||(n=t,t=void 0);const{duration:o,easing:i}=sanitizeScrollOptions(n);t=t||utils.getDocument().body;let r=0,l=e?e.offsetTop:0;const s=utils.getDocument();return t!==s.body&&t!==s.documentElement||(r=window.pageYOffset,l=e.getBoundingClientRect().top+r),scrollTo(t,{top:l,left:0,duration:o,easing:i})}function validateElement(e){if(void 0===e){throw new Error("The element passed to scrollIntoView() was undefined.")}if(!(e instanceof HTMLElement))throw new Error(`The element passed to scrollIntoView() must be a valid element. You passed ${e}.`)}function getScrollPropertyByElement(e){const t={window:{y:"scrollY",x:"scrollX"},element:{y:"scrollTop",x:"scrollLeft"}};return e===utils.getDocument().body?t.element.y:e instanceof Window?t.window.y:t.element.y}function sanitizeScrollOptions(e){return e?("smooth"===e.behavior&&(e.easing="ease-in-out",e.duration=300),"instant"!==e.behavior&&"auto"!==e.behavior||(e.duration=0,e.easing="linear"),e):{}}function getScrollPosition(e){const t=utils.getDocument(),n=getScrollPropertyByElement(e);return e===t.body||e===t.documentElement?t.body[n]||t.documentElement[n]:e instanceof Window?window[n]:e[n]}function setScrollPosition(e,t){const n=getScrollPropertyByElement(e);e===document.body||e===document.documentElement?(document.body[n]=t,document.documentElement[n]=t):e[n]=t}const utils={getDocument:()=>document},easingMap={linear:e=>e,"ease-in":e=>e*e,"ease-out":e=>e*(2-e),"ease-in-out":e=>e<.5?2*e*e:(4-2*e)*e-1},getEasing=e=>{const t=easingMap[e||"linear"];if(!t){const t=Object.keys(easingMap).join(",");throw new Error(`Scroll error: scroller does not support an easing option of "${e}". Supported options are ${t}`)}return t};export{scrollTo,scrollIntoView,utils,easingMap};
